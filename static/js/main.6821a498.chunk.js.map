{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyboardKeyHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAGaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,sBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,sBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACkB,4BAAfT,EACG,0BADH,mCAE+BA,EAF/B,aAvBX,GAAyBU,a,MCEzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.6821a498.chunk.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\nimport { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyboardKeyHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyboardKeyHandler);\n  }\n\n  keyboardKeyHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey === 'Nothing was pressed yet'\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}